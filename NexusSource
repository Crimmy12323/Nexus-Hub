local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/main/source.lua", true))()

local Window = Luna:CreateWindow({
    Name = "Nexus Hub", -- Title of your window
    LogoID = "82795327169782", -- Asset ID of your logo, set to nil if you don't have one
    LoadingEnabled = false, -- Whether to enable the loading animation
    LoadingTitle = "Luna Interface Suite", -- Loading screen title
    LoadingSubtitle = "by Nebula Softworks", -- Loading screen subtitle

    ConfigSettings = {
      RootFolder = nil, -- i dont think ur gonna use this
      ConfigFolder = "Nexus Hub"
    },

	KeySystem = true, -- As Of Beta 6, Luna Has officially Implemented A Key System!
	KeySettings = {
		Title = "Nexus Hub Key System",
		Subtitle = "Key System",
		Note = "",
		SaveInRoot = false, -- Enabling will save the key in your RootFolder (YOU MUST HAVE ONE BEFORE ENABLING THIS OPTION)
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		Key = {"Nexus_7161A72GGDJ81AQ8199FA8"} -- List of keys that will be accepted by the system, please use a system like Pelican or Luarmor that provide key strings based on your HWID since putting a simple string is very easy to bypass
	}
})

Window:CreateHomeTab({
	SupportedExecutors = {}, -- A Table Of Executors Your Script Supports. Add strings of the executor names for each executor.
	DiscordInvite = "JXqnj4X7DA", -- The Discord Invite Link. Do Not Include discord.gg/ | Only Include the code.
	Icon = 2, -- By Default, The Icon Is The Home Icon. If You would like to change it to dashboard, replace the interger with 2
})

Luna:Notification({ 
	Title = "Nexus Hub Executed",
	Icon = "notifications_active",
	ImageSource = "Material",
	Content = "Thank you to all the people who created this master pce UI"
})

local MainTab = Window:CreateTab({
    Name = "Main",
    Icon = "home_filled", -- Icon for the tab
    ImageSource = "Material", -- Image source (Material Design)
    ShowTitle = true -- Whether to show the title at the top of the tab
})

local CharacterTab = Window:CreateTab({
    Name = "Character",
    Icon = "directions_run", -- Icon for the tab
    ImageSource = "Material", -- Image source (Material Design)
    ShowTitle = true -- Whether to show the title at the top of the tab
})

local MiscTab = Window:CreateTab({
    Name = "Miscellaneous",
    Icon = "miscellaneous_services", -- Icon for the tab
    ImageSource = "Material", -- Image source (Material Design)
    ShowTitle = true -- Whether to show the title at the top of the tab
})

local InfoTab = Window:CreateTab({
    Name = "Information",
    Icon = "info", -- Icon for the tab
    ImageSource = "Material", -- Image source (Material Design)
    ShowTitle = true -- Whether to show the title at the top of the tab
})

MainTab:CreateSection("Universal")

local Button = MainTab:CreateButton({
    Name = "Infinite Yeild", -- Button name
    Description = "The most popular admin script.", -- Button description
    Callback = function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))() 
            Luna:Notification({ 
                Title = "Infinite Yeild Executed",
                Icon = "notifications_active",
                ImageSource = "Material",
                Content = "Nexus Hub Notification"
            })
    end
})

local Label = MiscTab:CreateLabel({
	Text = "Game Modification",
	Style = 1 -- Luna Labels Have 3 Styles : A Basic Label, A Green Information Label and A Red Warning Label. Look At The Following Image For More Details
})

local Button = MiscTab:CreateButton({
    Name = "Anti Afk", -- Button name
    Description = "Enables Anti Afk.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/hassanxzayn-lua/Anti-afk/main/antiafkbyhassanxzyn"))();
        Luna:Notification({ 
            Title = "Anti Afk Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Label = MiscTab:CreateLabel({
	Text = "Warning",
	Style = 3 -- Luna Labels Have 3 Styles : A Basic Label, A Green Information Label and A Red Warning Label. Look At The Following Image For More Details
})

local Button = MiscTab:CreateButton({
    Name = "Destoy Luna UI", -- Button name
    Description = "Destroys luna UI.", -- Button description
    Callback = function()
        Luna:Destroy()
    end
})

local Label = MiscTab:CreateLabel({
	Text = "Testing",
	Style = 2 -- Luna Labels Have 3 Styles : A Basic Label, A Green Information Label and A Red Warning Label. Look At The Following Image For More Details
})

local Button = MiscTab:CreateButton({
    Name = "UNC Test", -- Button name
    Description = "Runs a UNC test.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/unified-naming-convention/NamingStandard/refs/heads/main/UNCCheckEnv.lua"))() 
        Luna:Notification({ 
            Title = "UNC Test Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Button = MiscTab:CreateButton({
    Name = "sUNC Test", -- Button name
    Description = "Runs a sUNC test.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://gitlab.com/sens3/nebunu/-/raw/main/HummingBird8's_sUNC_yes_i_moved_to_gitlab_because_my_github_acc_got_brickedd/sUNCm0m3n7.lua"))()
        Luna:Notification({ 
            Title = "sUNC Test Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

InfoTab:CreateSection("Luna UI Credits")

local Paragraph = InfoTab:CreateParagraph({
	Title = "Main Developers",
	Text = "Hunter - Lead/Main Developer, UI Designing, Some Programming, Documentation, and Logo     JustHey - Co Developer, Major Bug Fixing, Configuration Scripting                                                   Throit - Color Picker                                                                                                                                        Wally - Dragging And Certain Other Mechanics                                                                                                                                        Shlexr and iRay - Rayfield (PCall Parsing, Notifications, Slider)"
})

local Paragraph = InfoTab:CreateParagraph({
	Title = "Helpers/Side Developers",
	Text = "Tarmac and qweery - Icon Modules                                                                                                     Kirill9655 - Loading Circle and Certain Images                                                                                                   Sirius Discord Members - Feedback, Suggestions And Testers                                                                                              Inori - Configuration Concept"
})

InfoTab:CreateSection("Nexus Hub Credits")

local Paragraph = InfoTab:CreateParagraph({
	Title = "Main Develpoper/Friends ",
	Text = "Crimson/Pookie Pepelss - Founder Of Nexus Hub                                                                                 Hunter - Helping Me Out When My Brain Dies"
})


local Button = MainTab:CreateButton({
    Name = "Dex Explorer", -- Button name
    Description = "Best roblox game explorer.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
        Luna:Notification({ 
            Title = "Dex Explorer Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Button = MainTab:CreateButton({
    Name = "Simple Spy", -- Button name
    Description = "Remote spy gui.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/SimpleSpyV3/main.lua", true))()
        Luna:Notification({ 
            Title = "Simple Spy Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

MainTab:CreateSection("Chat Bypass")

local Button = MainTab:CreateButton({
    Name = "Gaze Chat Bypass", -- Button name
    Description = "A decent bypasser.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Crimmy12323/gaze-bypass/refs/heads/main/GazeBypass'))()"))() 
        Luna:Notification({ 
            Title = "Gaze Chat Bypass Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Button = MainTab:CreateButton({
    Name = "UserCreation Chat Bypass", -- Button name
    Description = "BEST chat bypasser.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/1price/usercreation/refs/heads/main/UserCreation.lua", true))()
        Luna:Notification({ 
            Title = "UserCreation Chat Bypass Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

MainTab:CreateSection("Murder Mystery 2")

local Button = MainTab:CreateButton({
    Name = "Vertex", -- Button name
    Description = "My favourite MM2 script.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/loadstring"))() 
        Luna:Notification({ 
            Title = "Vertex Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Button = MainTab:CreateButton({
    Name = "Snap Sanix", -- Button name
    Description = "Best MM2 script.", -- Button description
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Roman34296589/SnapSanixHUB/refs/heads/main/SnapSanixHUB.lua'))()
        Luna:Notification({ 
            Title = "Snap Sanix Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

MainTab:CreateSection("MIC UP 🔊")

local Button = MainTab:CreateButton({
    Name = "Kitty Hub", -- Button name
    Description = "Sexiest Mic Up script.", -- Button description
    Callback = function()
        loadstring(game:HttpGet('https://whimper.xyz/kitty'))()
        Luna:Notification({ 
            Title = "Kitty Hub Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

MainTab:CreateSection("[🏴‍☠️] Fisch")

local Button = MainTab:CreateButton({
    Name = "Forge Hub", -- Button name
    Description = "Advanced Fisch script.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Skzuppy/forge-hub/main/loader.lua"))()
        Luna:Notification({ 
            Title = "Forge Hub Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Button = MainTab:CreateButton({
    Name = "Firen Hub", -- Button name
    Description = "Best autofarm script for Fisch.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Skibidiking123/Fisch1/refs/heads/main/FischMain"))()
        Luna:Notification({ 
            Title = "Firen Hub Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

MainTab:CreateSection("Build A Boat For Treasure")

local Button = MainTab:CreateButton({
    Name = "NovaBoat", -- Button name
    Description = "Best script for BABFT.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/novakoolhub/Scripts/main/Scripts/NovBoat.lua"))()
        Luna:Notification({ 
            Title = "NovaBoat Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

MainTab:CreateSection("[☢️] Arsenal")

local Button = MainTab:CreateButton({
    Name = "Thunder Client", -- Button name
    Description = "Thunder Client ON TOP.", -- Button description
    Callback = function()     
        loadstring(game:HttpGet('https://raw.githubusercontent.com/andrewdarkyyofficial/thunderclient/main/main.lua'))()
        Luna:Notification({ 
            Title = "Thunder Client Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Button = MainTab:CreateButton({
    Name = "ProjectWare", -- Button name
    Description = "A random script I found.", -- Button description
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/FishyPlayzThis/Projecthub-Arsenal/refs/heads/main/obf_QoCPBEH6oZ3Bsrk9saw8oegnmuMZtW0z764FNNfvFwGDACIespPcUZd9NU7P6uq6.lua"))()
        Luna:Notification({ 
            Title = "ProjectWare Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

CharacterTab:CreateSection("Universal")

local flying = false
local speed = 50
local flySpeed = 100
local flyControl

local Bind = CharacterTab:CreateBind({
Name = "Fly Keybind",
Description = nil,
CurrentBind = "Q", -- Check Roblox Studio Docs For KeyCode Names
HoldToInteract = false, -- When true, Instead of toggling, You hold to achieve the active state of the Bind
Callback = function(BindState)
if BindState then
startFlying()
Luna:Notification({
Title = "Fly Toggle Enabled",
Icon = "notifications_active",
ImageSource = "Material",
Content = "Nexus Hub Notification"
})
else
stopFlying()
Luna:Notification({
Title = "Fly Toggle Disabled",
Icon = "notifications_active",
ImageSource = "Material",
Content = "Nexus Hub Notification"
})
end
end
}, "FlyToggle") -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps

function startFlying()
if not flying then
flying = true
local player = game.Players.LocalPlayer
local character = player.Character
local humanoid = character:FindFirstChildOfClass("Humanoid")
local rootPart = character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso")

flyControl = Instance.new("BodyVelocity", rootPart)
flyControl.Velocity = Vector3.new(0, 0, 0)
flyControl.MaxForce = Vector3.new(9e9, 9e9, 9e9)

local flyGyro = Instance.new("BodyGyro", rootPart)
flyGyro.CFrame = rootPart.CFrame
flyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
flyGyro.P = 9e4

humanoid.PlatformStand = true

game:GetService("RunService").RenderStepped:Connect(function()
if flying then
local moveDirection = Vector3.new(0, 0, 0)
if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.W) then
moveDirection = moveDirection + (workspace.CurrentCamera.CFrame.LookVector * flySpeed)
end
if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.S) then
moveDirection = moveDirection - (workspace.CurrentCamera.CFrame.LookVector * flySpeed)
end
if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.A) then
moveDirection = moveDirection - (workspace.CurrentCamera.CFrame.RightVector * flySpeed)
end
if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.D) then
moveDirection = moveDirection + (workspace.CurrentCamera.CFrame.RightVector * flySpeed)
end
if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space) then
moveDirection = moveDirection + Vector3.new(0, flySpeed, 0)
end
if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then
moveDirection = moveDirection - Vector3.new(0, flySpeed, 0)
end

flyControl.Velocity = moveDirection
flyGyro.CFrame = workspace.CurrentCamera.CFrame
end
end)
end
end

function stopFlying()
if flying then
flying = false
local player = game.Players.LocalPlayer
local character = player.Character
local humanoid = character:FindFirstChildOfClass("Humanoid")
local rootPart = character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso")

if rootPart:FindFirstChildOfClass("BodyVelocity") then
rootPart:FindFirstChildOfClass("BodyVelocity"):Destroy()
end
if rootPart:FindFirstChildOfClass("BodyGyro") then
rootPart:FindFirstChildOfClass("BodyGyro"):Destroy()
end

humanoid.PlatformStand = false
end
end
local Input = CharacterTab:CreateInput({
Name = "Fly Speed",
Description = "Changes flight speed",
PlaceholderText = "Enter Fly Speed",
CurrentValue = tostring(flySpeed), -- the current text
Numeric = true, -- When true, the user may only type numbers in the box (Example walkspeed)
MaxCharacters = 3, -- if a number, the textbox length cannot exceed the number
Enter = true, -- When true, the callback will only be executed when the user presses enter.
Callback = function(Text)
    Luna:Notification({ 
        Title = "Fly Speed Changed",
        Icon = "notifications_active",
        ImageSource = "Material",
        Content = "Nexus Hub Notification"
    })
-- The function that takes place when the input is changed
-- The variable (Text) is a string for the value in the text box
flySpeed = tonumber(Text) or flySpeed
end
}, "FlySpeedInput") -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps

local WalkSpeedSlider = CharacterTab:CreateSlider({
    Name = "WalkSpeed", -- Slider name
    Range = {0, 200}, -- Min and max values for walk speed
    Increment = 1, -- Value change increment
    CurrentValue = 16, -- Initial value for walk speed
    Callback = function(Value)
        -- Set the player's walk speed based on the slider value
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
}, "WalkSpeedSlider")

JumpPowerSlider = CharacterTab:CreateSlider({
    Name = "JumpPower", -- Slider name
    Range = {50, 250}, -- Min and max values for jump power
    Increment = 1, -- Value change increment
    CurrentValue = 50, -- Initial value for jump power
    Callback = function(Value)
        local character = game.Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                -- Check if the character is using R15 (humanoid has RigType)
                if humanoid.RigType == Enum.HumanoidRigType.R15 then
                    -- Use JumpHeight for R15
                    humanoid.JumpHeight = Value
                else
                    -- Use JumpPower for R6
                    humanoid.JumpPower = Value
                end
            end
        end
    end
}, "JumpPowerSlider")

local Button = CharacterTab:CreateButton({
    Name = "Reset to Default", -- Button name
    Description = "Resets WalkSpeed and JumpPower to default values and slider positions.", -- Button description
    Callback = function()
        -- Reset the WalkSpeed and JumpPower of the player
        local player = game.Players.LocalPlayer
        if player.Character then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 16 -- Default WalkSpeed value
                humanoid.JumpPower = 50 -- Default JumpPower value
            end
        end

        -- Update the sliders back to their default values
        WalkSpeedSlider:UpdateValue(16) -- Reset WalkSpeed slider to default (16)
        JumpPowerSlider:UpdateValue(50) -- Reset JumpPower slider to default (50)
        
        -- Optionally, print a message to confirm reset
        Luna:Notification({ 
            Title = "WalkSpeed/Jumpspeed Reset",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

CharacterTab:CreateSection("R6 Character")

local Button = CharacterTab:CreateButton({
    Name = "Fe Head Backpack", -- Button name
    Description = "ServerSided character modification.", -- Button description
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Gazer-Ha/Valiant-Ui-Lib-Gazed-/refs/heads/main/Head%20Pack'))()
        Luna:Notification({ 
            Title = "Fe Head Backpack Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})

local Button = CharacterTab:CreateButton({
    Name = "Fe Head Down", -- Button name
    Description = "ServerSided character modification.", -- Button description
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Gazer-Ha/Valiant-Ui-Lib-Gazed-/refs/heads/main/Head%20Down'))()
        Luna:Notification({ 
            Title = "Fe Head Down Executed",
            Icon = "notifications_active",
            ImageSource = "Material",
            Content = "Nexus Hub Notification"
        })
    end
})
